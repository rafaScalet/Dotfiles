# Options
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

set -g detach-on-destroy off
set -g exit-empty off

set -g allow-passthrough on

set -g mouse on

set -g prefix C-a

set -g mode-keys vi

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -sa terminal-features ",xterm-256color:RGB"

# Bindings
bind -N "Split window horizontally" \\ split-window -h
bind -N "Split window vertically" - split-window -v

bind -N "$EDITOR" e new-window -n "$EDITOR" -S "$EDITOR"
bind -N "lazygit" g new-window -n "lazygit" -S "lazygit"
bind -N "lazydocker" d new-window -n "lazydocker" -S "lazydocker"
bind -N "atac" w new-window -n "atac" -S "atac"
bind -N "bottom" b new-window -n "bottom" -S "btm"
bind -N "fish" p new-window -n "fish" -S "fish"
bind -N "usql" q new-window -n "usql" -S "usql"

bind -N "Topgrade" C-u if-shell 'tmux has-session -t topgrade' 'switch-client -t topgrade' 'run-shell "topgrade"'

bind -N "Key bindings help" ? run-shell "tmux list-keys -aN | fzf --tmux 50% || true"

bind -N "Switch to last client" r switch-client -l

bind -N "Kill the active pane" x confirm-before -p "kill-pane #P (y/N)" kill-pane
bind -N "kill the current window" X confirm-before -p "kill-window #W? (y/N)" kill-window
bind -N "Kill the attached session" C-x confirm-before -p "kill-session #S? (y/N)" kill-session
bind -N "Kill the entire server" M-x confirm-before -p "kill-server (y/N)" kill-server

bind -N "Session/Project Manager" o run-shell "tmux-fzf-sessions"
bind -N "Search for a man page" C-m run-shell "tmux-fzf-man-pages"
bind -N "Run scripts from package.json" n run-shell "tmux-fzf-node-scripts"

bind -N "Enter copy mode" -n "C-;" copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# XDG Fallback
if-shell '[ -z "$XDG_DATA_HOME" ]' {
  set-environment -g XDG_DATA_HOME "$HOME/.local/share"
  display-message "WARNING: XDG_DATA_HOME is not set, falling back to $HOME/.local/share/"
}

if-shell '[ -z "$XDG_CONFIG_HOME" ]' {
  set-environment -g XDG_CONFIG_HOME "$HOME/.config"
  display-message "WARNING: XDG_CONFIG_HOME is not set, falling back to $HOME/.config"
}

if-shell '[ -z "$XDG_CACHE_HOME" ]' {
  set-environment -g XDG_CACHE_HOME "$HOME/.cache"
  display-message "WARNING: XDG_CACHE_HOME is not set, falling back to $HOME/.cache"
}

# My custom status bar inspired by catppuccin
source "${XDG_CONFIG_HOME}/tmux/status.tmux"

# Tmux Plugin Manager Installation
set-environment -g -F TMUX_PLUGIN_MANAGER_PATH "$XDG_DATA_HOME/tmux/plugins"

if-shell '[ ! -d "${TMUX_PLUGIN_MANAGER_PATH}" ]' {
  display-message "TMUX_PLUGIN_MANAGER_PATH set to $XDG_DATA_HOME/tmux/plugins"
  run-shell 'git clone https://github.com/tmux-plugins/tpm ${TMUX_PLUGIN_MANAGER_PATH}'
  run-shell '${TMUX_PLUGIN_MANAGER_PATH}/bin/install_plugins'
  display-message 'Plugins installed'
}

# Plugins Definitions
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'rafascalet/tmux-nav-master'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Plugins "Source"
run-shell "#{TMUX_PLUGIN_MANAGER_PATH}/tpm"

# Binds Descriptions and Unbinds
bind -N "Install plugins" I
bind -N "Update plugins" U
bind -N "Clean plugins" M-u
bind -N "Open url searcher" u
bind -N "Open window menu options" <
bind -N "Open pane menu options" >
bind -N "Source the config file" R
bind -N "Select the last window" a

unbind '&'     # "X"
unbind '"'     # "\"
unbind '%'     # "-"
unbind '['     # "-n C-;"
unbind ']'     # I don't like
unbind '('     # "j"
unbind ')'     # "k"
unbind '{'     # "H", "J", "K", "L"
unbind '}'     # "H", "J", "K", "L"
unbind 'left'  # "-n C-h"
unbind 'up'    # "-n C-j"
unbind 'down'  # "-n C-k"
unbind 'right' # "-n C-l"
unbind 'C-z'   # I don't like
